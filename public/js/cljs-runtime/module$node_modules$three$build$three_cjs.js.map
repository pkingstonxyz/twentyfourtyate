{
"version":3,
"file":"module$node_modules$three$build$three_cjs.js",
"lineCount":20595,
"mappings":"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",
"sources":["node_modules/three/build/three.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$build$three_cjs\"] = function(global,require,module,exports) {\n/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n'use strict';\n\nconst REVISION = '165';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$4.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$4.elements[ 0 ] *= invSX;\n\t\t_m1$4.elements[ 1 ] *= invSX;\n\t\t_m1$4.elements[ 2 ] *= invSX;\n\n\t\t_m1$4.elements[ 4 ] *= invSY;\n\t\t_m1$4.elements[ 5 ] *= invSY;\n\t\t_m1$4.elements[ 6 ] *= invSY;\n\n\t\t_m1$4.elements[ 8 ] *= invSZ;\n\t\t_m1$4.elements[ 9 ] *= invSZ;\n\t\t_m1$4.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$4 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$4 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$3 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$3.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$3.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$3.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$3 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$3.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$3 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$3.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$3.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$3 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1$2.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1$2 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // @deprecated, r159\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// @deprecated, r159\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( batchId );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t\\n\\t\\t#else\\n\\t\\t\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < primcount.length; i ++ ) {\n\n\t\t\t\tinfo.update( elementCount, mode, primcount[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: HAS_EXTENSIONS && material.extensions.multiDraw === true && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerSize = mipmap.width * mipmap.height;\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, mipmap.data.slice( layerSize * layerIndex, layerSize * ( layerIndex + 1 ) ), 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t// When type is GL_UNSIGNED_BYTE, each of these bytes is\n\t\t\t\t\t\t\t// interpreted as one color component, depending on format. When\n\t\t\t\t\t\t\t// type is one of GL_UNSIGNED_SHORT_5_6_5,\n\t\t\t\t\t\t\t// GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_5_5_5_1, each\n\t\t\t\t\t\t\t// unsigned value is interpreted as containing all the components\n\t\t\t\t\t\t\t// for a single pixel, with the color components arranged\n\t\t\t\t\t\t\t// according to format.\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// See https://registry.khronos.org/OpenGL-Refpages/es1.1/xhtml/glTexImage2D.xml\n\t\t\t\t\t\t\tlet texelSize;\n\t\t\t\t\t\t\tswitch ( glType ) {\n\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_BYTE:\n\t\t\t\t\t\t\t\t\tswitch ( glFormat ) {\n\n\t\t\t\t\t\t\t\t\t\tcase _gl.ALPHA:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 1;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase _gl.LUMINANCE:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 1;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase _gl.LUMINANCE_ALPHA:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 2;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase _gl.RGB:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 3;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\tcase _gl.RGBA:\n\t\t\t\t\t\t\t\t\t\t\ttexelSize = 4;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error( `Unknown texel size for format ${glFormat}.` );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_4_4_4_4:\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_5_5_5_1:\n\t\t\t\t\t\t\t\tcase _gl.UNSIGNED_SHORT_5_6_5:\n\t\t\t\t\t\t\t\t\ttexelSize = 1;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthrow new Error( `Unknown texel size for type ${glType}.` );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst layerSize = image.width * image.height * texelSize;\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, image.data.slice( layerSize * layerIndex, layerSize * ( layerIndex + 1 ) ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tcamera.near = depthSensing.depthNear;\n\t\t\t\tcamera.far = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t\tcameraL.near = _currentDepthNear;\n\t\t\t\tcameraL.far = _currentDepthFar;\n\t\t\t\tcameraR.near = _currentDepthNear;\n\t\t\t\tcameraR.far = _currentDepthFar;\n\n\t\t\t\tcameraL.updateProjectionMatrix();\n\t\t\t\tcameraR.updateProjectionMatrix();\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t// Calculate the chunk offset\n\t\t\t\t\tconst chunkOffsetUniform = offset % chunkSize;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkOffsetUniform !== 0 && ( chunkSize - chunkOffsetUniform ) < info.boundary ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkOffsetUniform );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z, activeViewport.w );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.render( scene );\n\n\t\t\t} else {\n\n\t\t\t\t_this.clear();\n\n\t\t\t}\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\t\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\t\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t\ttry {\n\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\n\t\t\t\t\t\t} finally {\n\n\t\t\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn buffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tlevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\tlet width, height, minX, minY;\n\t\t\tlet dstX, dstY;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\n\t\t\t} else {\n\n\t\t\t\twidth = srcTexture.image.width;\n\t\t\t\theight = srcTexture.image.height;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, dstX, dstY, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\tconsole.warn( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ level ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.max.z - srcRegion.min.z;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.min.z;\n\n\t\t\t} else {\n\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\tdepth = image.depth;\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\twarnOnce( 'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t\t// Local color per geometry by using data texture\n\t\tthis._colorsTexture = null;\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// initialize the color to white\n\t\tif ( colorsTexture !== null ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, geometryId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, vertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, reservedRange.indexCount );\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetInstanceCountAt( id ) {\n\n\t\tif ( this._multiDrawInstances === null ) return null;\n\n\t\treturn this._multiDrawInstances[ id ];\n\n\t}\n\n\tsetInstanceCountAt( id, instanceCount ) {\n\n\t\tif ( this._multiDrawInstances === null ) {\n\n\t\t\tthis._multiDrawInstances = new Int32Array( this._maxGeometryCount ).fill( 1 );\n\n\t\t}\n\n\t\tthis._multiDrawInstances[ id ] = instanceCount;\n\n\t\treturn id;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetColorAt( geometryId, color ) {\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tcolor.toArray( colorsArray, geometryId * 4 );\n\t\tcolorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( geometryId, color ) {\n\n\t\tconst active = this._active;\n\t\tconst colorsArray = this._colorsTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn color.fromArray( colorsArray, geometryId * 4 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst active = this._active;\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] && active[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdates( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (\u00b11, \u00b11, \u00b11)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, \u00b11/\u03c6, \u00b1\u03c6)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (\u00b11/\u03c6, \u00b1\u03c6, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (\u00b1\u03c6, 0, \u00b11/\u03c6)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --\u003e (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = \u03c0 * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 \u03c0 luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // \u03c0 * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * \u03c0 / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( \u03c0 / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( \u03c0 / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( \u03c0 / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexports.ACESFilmicToneMapping = ACESFilmicToneMapping;\nexports.AddEquation = AddEquation;\nexports.AddOperation = AddOperation;\nexports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\nexports.AdditiveBlending = AdditiveBlending;\nexports.AgXToneMapping = AgXToneMapping;\nexports.AlphaFormat = AlphaFormat;\nexports.AlwaysCompare = AlwaysCompare;\nexports.AlwaysDepth = AlwaysDepth;\nexports.AlwaysStencilFunc = AlwaysStencilFunc;\nexports.AmbientLight = AmbientLight;\nexports.AnimationAction = AnimationAction;\nexports.AnimationClip = AnimationClip;\nexports.AnimationLoader = AnimationLoader;\nexports.AnimationMixer = AnimationMixer;\nexports.AnimationObjectGroup = AnimationObjectGroup;\nexports.AnimationUtils = AnimationUtils;\nexports.ArcCurve = ArcCurve;\nexports.ArrayCamera = ArrayCamera;\nexports.ArrowHelper = ArrowHelper;\nexports.AttachedBindMode = AttachedBindMode;\nexports.Audio = Audio;\nexports.AudioAnalyser = AudioAnalyser;\nexports.AudioContext = AudioContext;\nexports.AudioListener = AudioListener;\nexports.AudioLoader = AudioLoader;\nexports.AxesHelper = AxesHelper;\nexports.BackSide = BackSide;\nexports.BasicDepthPacking = BasicDepthPacking;\nexports.BasicShadowMap = BasicShadowMap;\nexports.BatchedMesh = BatchedMesh;\nexports.Bone = Bone;\nexports.BooleanKeyframeTrack = BooleanKeyframeTrack;\nexports.Box2 = Box2;\nexports.Box3 = Box3;\nexports.Box3Helper = Box3Helper;\nexports.BoxGeometry = BoxGeometry;\nexports.BoxHelper = BoxHelper;\nexports.BufferAttribute = BufferAttribute;\nexports.BufferGeometry = BufferGeometry;\nexports.BufferGeometryLoader = BufferGeometryLoader;\nexports.ByteType = ByteType;\nexports.Cache = Cache;\nexports.Camera = Camera;\nexports.CameraHelper = CameraHelper;\nexports.CanvasTexture = CanvasTexture;\nexports.CapsuleGeometry = CapsuleGeometry;\nexports.CatmullRomCurve3 = CatmullRomCurve3;\nexports.CineonToneMapping = CineonToneMapping;\nexports.CircleGeometry = CircleGeometry;\nexports.ClampToEdgeWrapping = ClampToEdgeWrapping;\nexports.Clock = Clock;\nexports.Color = Color;\nexports.ColorKeyframeTrack = ColorKeyframeTrack;\nexports.ColorManagement = ColorManagement;\nexports.CompressedArrayTexture = CompressedArrayTexture;\nexports.CompressedCubeTexture = CompressedCubeTexture;\nexports.CompressedTexture = CompressedTexture;\nexports.CompressedTextureLoader = CompressedTextureLoader;\nexports.ConeGeometry = ConeGeometry;\nexports.ConstantAlphaFactor = ConstantAlphaFactor;\nexports.ConstantColorFactor = ConstantColorFactor;\nexports.CubeCamera = CubeCamera;\nexports.CubeReflectionMapping = CubeReflectionMapping;\nexports.CubeRefractionMapping = CubeRefractionMapping;\nexports.CubeTexture = CubeTexture;\nexports.CubeTextureLoader = CubeTextureLoader;\nexports.CubeUVReflectionMapping = CubeUVReflectionMapping;\nexports.CubicBezierCurve = CubicBezierCurve;\nexports.CubicBezierCurve3 = CubicBezierCurve3;\nexports.CubicInterpolant = CubicInterpolant;\nexports.CullFaceBack = CullFaceBack;\nexports.CullFaceFront = CullFaceFront;\nexports.CullFaceFrontBack = CullFaceFrontBack;\nexports.CullFaceNone = CullFaceNone;\nexports.Curve = Curve;\nexports.CurvePath = CurvePath;\nexports.CustomBlending = CustomBlending;\nexports.CustomToneMapping = CustomToneMapping;\nexports.CylinderGeometry = CylinderGeometry;\nexports.Cylindrical = Cylindrical;\nexports.Data3DTexture = Data3DTexture;\nexports.DataArrayTexture = DataArrayTexture;\nexports.DataTexture = DataTexture;\nexports.DataTextureLoader = DataTextureLoader;\nexports.DataUtils = DataUtils;\nexports.DecrementStencilOp = DecrementStencilOp;\nexports.DecrementWrapStencilOp = DecrementWrapStencilOp;\nexports.DefaultLoadingManager = DefaultLoadingManager;\nexports.DepthFormat = DepthFormat;\nexports.DepthStencilFormat = DepthStencilFormat;\nexports.DepthTexture = DepthTexture;\nexports.DetachedBindMode = DetachedBindMode;\nexports.DirectionalLight = DirectionalLight;\nexports.DirectionalLightHelper = DirectionalLightHelper;\nexports.DiscreteInterpolant = DiscreteInterpolant;\nexports.DisplayP3ColorSpace = DisplayP3ColorSpace;\nexports.DodecahedronGeometry = DodecahedronGeometry;\nexports.DoubleSide = DoubleSide;\nexports.DstAlphaFactor = DstAlphaFactor;\nexports.DstColorFactor = DstColorFactor;\nexports.DynamicCopyUsage = DynamicCopyUsage;\nexports.DynamicDrawUsage = DynamicDrawUsage;\nexports.DynamicReadUsage = DynamicReadUsage;\nexports.EdgesGeometry = EdgesGeometry;\nexports.EllipseCurve = EllipseCurve;\nexports.EqualCompare = EqualCompare;\nexports.EqualDepth = EqualDepth;\nexports.EqualStencilFunc = EqualStencilFunc;\nexports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\nexports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\nexports.Euler = Euler;\nexports.EventDispatcher = EventDispatcher;\nexports.ExtrudeGeometry = ExtrudeGeometry;\nexports.FileLoader = FileLoader;\nexports.Float16BufferAttribute = Float16BufferAttribute;\nexports.Float32BufferAttribute = Float32BufferAttribute;\nexports.FloatType = FloatType;\nexports.Fog = Fog;\nexports.FogExp2 = FogExp2;\nexports.FramebufferTexture = FramebufferTexture;\nexports.FrontSide = FrontSide;\nexports.Frustum = Frustum;\nexports.GLBufferAttribute = GLBufferAttribute;\nexports.GLSL1 = GLSL1;\nexports.GLSL3 = GLSL3;\nexports.GreaterCompare = GreaterCompare;\nexports.GreaterDepth = GreaterDepth;\nexports.GreaterEqualCompare = GreaterEqualCompare;\nexports.GreaterEqualDepth = GreaterEqualDepth;\nexports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\nexports.GreaterStencilFunc = GreaterStencilFunc;\nexports.GridHelper = GridHelper;\nexports.Group = Group;\nexports.HalfFloatType = HalfFloatType;\nexports.HemisphereLight = HemisphereLight;\nexports.HemisphereLightHelper = HemisphereLightHelper;\nexports.IcosahedronGeometry = IcosahedronGeometry;\nexports.ImageBitmapLoader = ImageBitmapLoader;\nexports.ImageLoader = ImageLoader;\nexports.ImageUtils = ImageUtils;\nexports.IncrementStencilOp = IncrementStencilOp;\nexports.IncrementWrapStencilOp = IncrementWrapStencilOp;\nexports.InstancedBufferAttribute = InstancedBufferAttribute;\nexports.InstancedBufferGeometry = InstancedBufferGeometry;\nexports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\nexports.InstancedMesh = InstancedMesh;\nexports.Int16BufferAttribute = Int16BufferAttribute;\nexports.Int32BufferAttribute = Int32BufferAttribute;\nexports.Int8BufferAttribute = Int8BufferAttribute;\nexports.IntType = IntType;\nexports.InterleavedBuffer = InterleavedBuffer;\nexports.InterleavedBufferAttribute = InterleavedBufferAttribute;\nexports.Interpolant = Interpolant;\nexports.InterpolateDiscrete = InterpolateDiscrete;\nexports.InterpolateLinear = InterpolateLinear;\nexports.InterpolateSmooth = InterpolateSmooth;\nexports.InvertStencilOp = InvertStencilOp;\nexports.KeepStencilOp = KeepStencilOp;\nexports.KeyframeTrack = KeyframeTrack;\nexports.LOD = LOD;\nexports.LatheGeometry = LatheGeometry;\nexports.Layers = Layers;\nexports.LessCompare = LessCompare;\nexports.LessDepth = LessDepth;\nexports.LessEqualCompare = LessEqualCompare;\nexports.LessEqualDepth = LessEqualDepth;\nexports.LessEqualStencilFunc = LessEqualStencilFunc;\nexports.LessStencilFunc = LessStencilFunc;\nexports.Light = Light;\nexports.LightProbe = LightProbe;\nexports.Line = Line;\nexports.Line3 = Line3;\nexports.LineBasicMaterial = LineBasicMaterial;\nexports.LineCurve = LineCurve;\nexports.LineCurve3 = LineCurve3;\nexports.LineDashedMaterial = LineDashedMaterial;\nexports.LineLoop = LineLoop;\nexports.LineSegments = LineSegments;\nexports.LinearDisplayP3ColorSpace = LinearDisplayP3ColorSpace;\nexports.LinearFilter = LinearFilter;\nexports.LinearInterpolant = LinearInterpolant;\nexports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\nexports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\nexports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\nexports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\nexports.LinearSRGBColorSpace = LinearSRGBColorSpace;\nexports.LinearToneMapping = LinearToneMapping;\nexports.LinearTransfer = LinearTransfer;\nexports.Loader = Loader;\nexports.LoaderUtils = LoaderUtils;\nexports.LoadingManager = LoadingManager;\nexports.LoopOnce = LoopOnce;\nexports.LoopPingPong = LoopPingPong;\nexports.LoopRepeat = LoopRepeat;\nexports.LuminanceAlphaFormat = LuminanceAlphaFormat;\nexports.LuminanceFormat = LuminanceFormat;\nexports.MOUSE = MOUSE;\nexports.Material = Material;\nexports.MaterialLoader = MaterialLoader;\nexports.MathUtils = MathUtils;\nexports.Matrix3 = Matrix3;\nexports.Matrix4 = Matrix4;\nexports.MaxEquation = MaxEquation;\nexports.Mesh = Mesh;\nexports.MeshBasicMaterial = MeshBasicMaterial;\nexports.MeshDepthMaterial = MeshDepthMaterial;\nexports.MeshDistanceMaterial = MeshDistanceMaterial;\nexports.MeshLambertMaterial = MeshLambertMaterial;\nexports.MeshMatcapMaterial = MeshMatcapMaterial;\nexports.MeshNormalMaterial = MeshNormalMaterial;\nexports.MeshPhongMaterial = MeshPhongMaterial;\nexports.MeshPhysicalMaterial = MeshPhysicalMaterial;\nexports.MeshStandardMaterial = MeshStandardMaterial;\nexports.MeshToonMaterial = MeshToonMaterial;\nexports.MinEquation = MinEquation;\nexports.MirroredRepeatWrapping = MirroredRepeatWrapping;\nexports.MixOperation = MixOperation;\nexports.MultiplyBlending = MultiplyBlending;\nexports.MultiplyOperation = MultiplyOperation;\nexports.NearestFilter = NearestFilter;\nexports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\nexports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\nexports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\nexports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\nexports.NeutralToneMapping = NeutralToneMapping;\nexports.NeverCompare = NeverCompare;\nexports.NeverDepth = NeverDepth;\nexports.NeverStencilFunc = NeverStencilFunc;\nexports.NoBlending = NoBlending;\nexports.NoColorSpace = NoColorSpace;\nexports.NoToneMapping = NoToneMapping;\nexports.NormalAnimationBlendMode = NormalAnimationBlendMode;\nexports.NormalBlending = NormalBlending;\nexports.NotEqualCompare = NotEqualCompare;\nexports.NotEqualDepth = NotEqualDepth;\nexports.NotEqualStencilFunc = NotEqualStencilFunc;\nexports.NumberKeyframeTrack = NumberKeyframeTrack;\nexports.Object3D = Object3D;\nexports.ObjectLoader = ObjectLoader;\nexports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\nexports.OctahedronGeometry = OctahedronGeometry;\nexports.OneFactor = OneFactor;\nexports.OneMinusConstantAlphaFactor = OneMinusConstantAlphaFactor;\nexports.OneMinusConstantColorFactor = OneMinusConstantColorFactor;\nexports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\nexports.OneMinusDstColorFactor = OneMinusDstColorFactor;\nexports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\nexports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\nexports.OrthographicCamera = OrthographicCamera;\nexports.P3Primaries = P3Primaries;\nexports.PCFShadowMap = PCFShadowMap;\nexports.PCFSoftShadowMap = PCFSoftShadowMap;\nexports.PMREMGenerator = PMREMGenerator;\nexports.Path = Path;\nexports.PerspectiveCamera = PerspectiveCamera;\nexports.Plane = Plane;\nexports.PlaneGeometry = PlaneGeometry;\nexports.PlaneHelper = PlaneHelper;\nexports.PointLight = PointLight;\nexports.PointLightHelper = PointLightHelper;\nexports.Points = Points;\nexports.PointsMaterial = PointsMaterial;\nexports.PolarGridHelper = PolarGridHelper;\nexports.PolyhedronGeometry = PolyhedronGeometry;\nexports.PositionalAudio = PositionalAudio;\nexports.PropertyBinding = PropertyBinding;\nexports.PropertyMixer = PropertyMixer;\nexports.QuadraticBezierCurve = QuadraticBezierCurve;\nexports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\nexports.Quaternion = Quaternion;\nexports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\nexports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\nexports.RED_GREEN_RGTC2_Format = RED_GREEN_RGTC2_Format;\nexports.RED_RGTC1_Format = RED_RGTC1_Format;\nexports.REVISION = REVISION;\nexports.RGBADepthPacking = RGBADepthPacking;\nexports.RGBAFormat = RGBAFormat;\nexports.RGBAIntegerFormat = RGBAIntegerFormat;\nexports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\nexports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\nexports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\nexports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\nexports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\nexports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\nexports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\nexports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\nexports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\nexports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\nexports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\nexports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\nexports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\nexports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\nexports.RGBA_BPTC_Format = RGBA_BPTC_Format;\nexports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\nexports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\nexports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\nexports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\nexports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\nexports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\nexports.RGBFormat = RGBFormat;\nexports.RGB_BPTC_SIGNED_Format = RGB_BPTC_SIGNED_Format;\nexports.RGB_BPTC_UNSIGNED_Format = RGB_BPTC_UNSIGNED_Format;\nexports.RGB_ETC1_Format = RGB_ETC1_Format;\nexports.RGB_ETC2_Format = RGB_ETC2_Format;\nexports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\nexports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\nexports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\nexports.RGFormat = RGFormat;\nexports.RGIntegerFormat = RGIntegerFormat;\nexports.RawShaderMaterial = RawShaderMaterial;\nexports.Ray = Ray;\nexports.Raycaster = Raycaster;\nexports.Rec709Primaries = Rec709Primaries;\nexports.RectAreaLight = RectAreaLight;\nexports.RedFormat = RedFormat;\nexports.RedIntegerFormat = RedIntegerFormat;\nexports.ReinhardToneMapping = ReinhardToneMapping;\nexports.RenderTarget = RenderTarget;\nexports.RepeatWrapping = RepeatWrapping;\nexports.ReplaceStencilOp = ReplaceStencilOp;\nexports.ReverseSubtractEquation = ReverseSubtractEquation;\nexports.RingGeometry = RingGeometry;\nexports.SIGNED_RED_GREEN_RGTC2_Format = SIGNED_RED_GREEN_RGTC2_Format;\nexports.SIGNED_RED_RGTC1_Format = SIGNED_RED_RGTC1_Format;\nexports.SRGBColorSpace = SRGBColorSpace;\nexports.SRGBTransfer = SRGBTransfer;\nexports.Scene = Scene;\nexports.ShaderChunk = ShaderChunk;\nexports.ShaderLib = ShaderLib;\nexports.ShaderMaterial = ShaderMaterial;\nexports.ShadowMaterial = ShadowMaterial;\nexports.Shape = Shape;\nexports.ShapeGeometry = ShapeGeometry;\nexports.ShapePath = ShapePath;\nexports.ShapeUtils = ShapeUtils;\nexports.ShortType = ShortType;\nexports.Skeleton = Skeleton;\nexports.SkeletonHelper = SkeletonHelper;\nexports.SkinnedMesh = SkinnedMesh;\nexports.Source = Source;\nexports.Sphere = Sphere;\nexports.SphereGeometry = SphereGeometry;\nexports.Spherical = Spherical;\nexports.SphericalHarmonics3 = SphericalHarmonics3;\nexports.SplineCurve = SplineCurve;\nexports.SpotLight = SpotLight;\nexports.SpotLightHelper = SpotLightHelper;\nexports.Sprite = Sprite;\nexports.SpriteMaterial = SpriteMaterial;\nexports.SrcAlphaFactor = SrcAlphaFactor;\nexports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\nexports.SrcColorFactor = SrcColorFactor;\nexports.StaticCopyUsage = StaticCopyUsage;\nexports.StaticDrawUsage = StaticDrawUsage;\nexports.StaticReadUsage = StaticReadUsage;\nexports.StereoCamera = StereoCamera;\nexports.StreamCopyUsage = StreamCopyUsage;\nexports.StreamDrawUsage = StreamDrawUsage;\nexports.StreamReadUsage = StreamReadUsage;\nexports.StringKeyframeTrack = StringKeyframeTrack;\nexports.SubtractEquation = SubtractEquation;\nexports.SubtractiveBlending = SubtractiveBlending;\nexports.TOUCH = TOUCH;\nexports.TangentSpaceNormalMap = TangentSpaceNormalMap;\nexports.TetrahedronGeometry = TetrahedronGeometry;\nexports.Texture = Texture;\nexports.TextureLoader = TextureLoader;\nexports.TorusGeometry = TorusGeometry;\nexports.TorusKnotGeometry = TorusKnotGeometry;\nexports.Triangle = Triangle;\nexports.TriangleFanDrawMode = TriangleFanDrawMode;\nexports.TriangleStripDrawMode = TriangleStripDrawMode;\nexports.TrianglesDrawMode = TrianglesDrawMode;\nexports.TubeGeometry = TubeGeometry;\nexports.UVMapping = UVMapping;\nexports.Uint16BufferAttribute = Uint16BufferAttribute;\nexports.Uint32BufferAttribute = Uint32BufferAttribute;\nexports.Uint8BufferAttribute = Uint8BufferAttribute;\nexports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\nexports.Uniform = Uniform;\nexports.UniformsGroup = UniformsGroup;\nexports.UniformsLib = UniformsLib;\nexports.UniformsUtils = UniformsUtils;\nexports.UnsignedByteType = UnsignedByteType;\nexports.UnsignedInt248Type = UnsignedInt248Type;\nexports.UnsignedInt5999Type = UnsignedInt5999Type;\nexports.UnsignedIntType = UnsignedIntType;\nexports.UnsignedShort4444Type = UnsignedShort4444Type;\nexports.UnsignedShort5551Type = UnsignedShort5551Type;\nexports.UnsignedShortType = UnsignedShortType;\nexports.VSMShadowMap = VSMShadowMap;\nexports.Vector2 = Vector2;\nexports.Vector3 = Vector3;\nexports.Vector4 = Vector4;\nexports.VectorKeyframeTrack = VectorKeyframeTrack;\nexports.VideoTexture = VideoTexture;\nexports.WebGL3DRenderTarget = WebGL3DRenderTarget;\nexports.WebGLArrayRenderTarget = WebGLArrayRenderTarget;\nexports.WebGLCoordinateSystem = WebGLCoordinateSystem;\nexports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\nexports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\nexports.WebGLRenderTarget = WebGLRenderTarget;\nexports.WebGLRenderer = WebGLRenderer;\nexports.WebGLUtils = WebGLUtils;\nexports.WebGPUCoordinateSystem = WebGPUCoordinateSystem;\nexports.WireframeGeometry = WireframeGeometry;\nexports.WrapAroundEnding = WrapAroundEnding;\nexports.ZeroCurvatureEnding = ZeroCurvatureEnding;\nexports.ZeroFactor = ZeroFactor;\nexports.ZeroSlopeEnding = ZeroSlopeEnding;\nexports.ZeroStencilOp = ZeroStencilOp;\nexports.createCanvasElement = createCanvasElement;\n\n};"],
"names":["shadow$provide","global","require","module","exports","generateUUID","d0","Math","random","d1","d2","d3","toLowerCase","_lut","clamp","value","min","max","euclideanModulo","n","m","lerp","x","y","t","denormalize","array","constructor","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","Error","normalize","round","arrayNeedsUint32","i","length","createElementNS","name","document","createCanvasElement","canvas","style","display","warnOnce","message","_cache","console","warn","probeAsync","gl","sync","interval","Promise","resolve","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","SRGBToLinear","c","pow","LinearToSRGB","serializeImage","image","HTMLImageElement","HTMLCanvasElement","ImageBitmap","ImageUtils","getDataURL","data","Array","from","width","height","type","satForAxes","axes","v0","v1","v2","extents","j","_testAxis","fromArray","r","abs","z","p0","dot","p1","p2","hue2rgb","p","q","toHalfFloat","val","_tables","floatView","f","uint32View","e","baseTable","shiftTable","fromHalfFloat","mantissaTable","offsetTable","exponentTable","checkGeometryIntersection","object","material","raycaster","ray","uv","uv1","normal","a","b","getVertexPosition","_vA$1","_vB$1","_vC$1","BackSide","intersect","side","intersectTriangle","_intersectionPoint","FrontSide","_intersectionPointWorld","copy","applyMatrix4","matrixWorld","distance","origin","distanceTo","near","far","point","clone","intersection","_uvA$1","fromBufferAttribute","_uvB$1","_uvC$1","Triangle","getInterpolation","Vector2","_normalA","_normalB","_normalC","Vector3","direction","multiplyScalar","face","materialIndex","getNormal","cloneUniforms","src","dst","u","property","isColor","isMatrix3","isMatrix4","isVector2","isVector3","isVector4","isTexture","isQuaternion","isRenderTargetTexture","isArray","slice","mergeUniforms","uniforms","merged","tmp","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","texture","colorSpace","ColorManagement","workingColorSpace","WebGLAnimation","onAnimationFrame","time","frame","animationLoop","requestId","context","requestAnimationFrame","isAnimating","start","stop","cancelAnimationFrame","setAnimationLoop","callback","setContext","WebGLAttributes","buffers","WeakMap","get","attribute","isInterleavedBufferAttribute","remove","deleteBuffer","buffer","delete","update","bufferType","isGLBufferAttribute","cached","version","set","bytesPerElement","elementSize","undefined","usage","size","byteLength","createBuffer","bindBuffer","bufferData","onUploadCallback","FLOAT","isFloat16BufferAttribute","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","Uint8ClampedArray","BYTES_PER_ELEMENT","updateRange","_updateRange","updateRanges","count","bufferSubData","l","range","clearUpdateRanges","offset","WebGLBackground","cubemaps","cubeuvmaps","state","objects","alpha","premultipliedAlpha","getBackground","scene","background","isScene","backgroundBlurriness","setClear","color","getRGB","_rgb","g","clearColor","Color","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getClearColor","setClearColor","getClearAlpha","setClearAlpha","render","forceClear","environmentBlendMode","xr","getEnvironmentBlendMode","autoClear","depth","setTest","setMask","clear","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","isCubeTexture","CubeUVReflectionMapping","mapping","Mesh","BoxGeometry","ShaderMaterial","ShaderLib","backgroundCube","vertexShader","fragmentShader","depthTest","depthWrite","fog","geometry","deleteAttribute","onBeforeRender","boxMesh.onBeforeRender","camera","copyPosition","Object","defineProperty","envMap","_e1$1","backgroundRotation","flipEnvMap","backgroundIntensity","setFromMatrix4","_m1$1","makeRotationFromEuler","toneMapped","SRGBTransfer","getTransfer","toneMapping","needsUpdate","layers","enableAll","unshift","PlaneGeometry","t2D","matrixAutoUpdate","updateMatrix","uvTransform","matrix","WebGLBindingStates","attributes","createBindingState","vao","newAttributes","enabledAttributes","attributeDivisors","maxVertexAttributes","program","wireframe","index","initAttributes","currentState","il","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","reset","resetDefaultState","forceUpdate","defaultState","bindVertexArray","getParameter","MAX_VERTEX_ATTRIBS","bindingStates","setup","programMap","id","stateMap","createVertexArray","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","instanceMatrix","instanceColor","updateBuffers","cache","ELEMENT_ARRAY_BUFFER","materialDefaultAttributeValues","defaultAttributeValues","normalized","itemSize","integer","IntType","gpuType","stride","isInstancedInterleavedBuffer","locationSize","isInstancedMesh","_maxInstanceCount","ARRAY_BUFFER","vertexAttribIPointer","vertexAttribPointer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","dispose","geometryId","programId","deleteVertexArray","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","extensions","info","renderInstances","primcount","drawArraysInstanced","mode","setMode","drawArrays","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","parameters","utils","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxAnisotropy","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","RGBAFormat","convert","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","HalfFloatType","UnsignedByteType","IMPLEMENTATION_COLOR_READ_TYPE","FloatType","WebGLClipping","properties","projectPlanes","planes","dstOffset","skipTransform","nPlanes","dstArray","uniform","flatSize","viewMatrix","matrixWorldInverse","viewNormalMatrix","getNormalMatrix","i4","plane","toArray","constant","scope","numPlanes","numIntersection","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","Plane","Matrix3","init","this.init","enableLocalClipping","enabled","beginShadows","this.beginShadows","endShadows","this.endShadows","setGlobalState","this.setGlobalState","setState","this.setState","useCache","clippingPlanes","clipIntersection","clipShadows","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","EquirectangularReflectionMapping","CubeReflectionMapping","EquirectangularRefractionMapping","CubeRefractionMapping","onTextureDispose","event","target","removeEventListener","cubemap","renderTarget","WebGLCubeRenderTarget","fromEquirectangularTexture","addEventListener","_createRenderTarget","params","cubeUVRenderTarget","WebGLRenderTarget","scissorTest","_setViewport","viewport","scissor","_getEquirectMaterial","_getCommonVertexShader","blending","NoBlending","_getCubemapMaterial","WebGLCubeUVMaps","cubemapUV","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","pmremVersion","PMREMGenerator","fromEquirectangular","fromCubemap","WebGLExtensions","getExtension","WebGLGeometries","onGeometryDispose","morphAttributes","geometries","wireframeAttributes","isInstancedBufferGeometry","memory","updateWireframeAttribute","indices","geometryIndex","geometryPosition","position","push","Uint32BufferAttribute","Uint16BufferAttribute","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElementsInstanced","setIndex","drawElements","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","triangles","points","lines","textures","programs","autoReset","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","error","WebGLMorphtargets","capabilities","morphTextures","morph","Vector4","objectInfluences","morphTargetInfluences","morphAttribute","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","ceil","DataArrayTexture","vertexDataStride","morphTarget","morphNormal","morphColor","w","disposeTexture","morphTexture","getUniforms","setValue","morphInfluencesSum","morphBaseInfluence","morphTargetsRelative","WebGLObjects","onInstancedMeshDispose","instancedMesh","updateMap","buffergeometry","hasEventListener","isSkinnedMesh","skeleton","flatten","nBlocks","blockSize","firstElem","arrayCacheF32","arraysEqual","copyArray","allocTexUnits","arrayCacheI32","allocateTextureUnit","setValueV1f","v","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","elements","uniformMatrix2fv","mat2array","setValueM3","uniformMatrix3fv","mat3array","setValueM4","uniformMatrix4fv","mat4array","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","emptyShadowTexture","emptyTexture","setTexture2D","setValueT3D1","setTexture3D","empty3dTexture","setValueT6","setTextureCube","emptyCubeTexture","setValueT2DArray1","setTexture2DArray","emptyArrayTexture","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","WebGLShader","string","shader","createShader","shaderSource","compileShader","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","exec","errorLine","parseInt","toUpperCase","getShaderSource","split","lines2","to","line","join","getTexelEncodingFunction","functionName","workingPrimaries","getPrimaries","encodingPrimaries","gamutMapping","P3Primaries","Rec709Primaries","LinearSRGBColorSpace","LinearDisplayP3ColorSpace","SRGBColorSpace","DisplayP3ColorSpace","components","getToneMappingFunction","LinearToneMapping","toneMappingName","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","AgXToneMapping","NeutralToneMapping","CustomToneMapping","generateDefines","defines","chunks","filterEmptyLine","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includeReplacer","match","include","ShaderChunk","newInclude","shaderChunkMap","includePattern","loopReplacer","end","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","PCFShadowMap","shadowMapType","PCFSoftShadowMap","VSMShadowMap","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","combine","MultiplyOperation","MixOperation","AddOperation","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","log2","texelWidth","texelHeight","WebGLProgram","cacheKey","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","glVertexShader","fragmentLog","glFragmentShader","runnable","haveDiagnostics","getProgramParameter","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","log","prefix","prefixVertex","prefixFragment","deleteShader","cachedUniforms","WebGLUniforms","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","getContext","envMapCubeUVSize","customVertexExtensions","extensionClipCullDistance","extensionMultiDraw","filter","customDefines","createProgram","versionString","glslVersion","isRawShaderMaterial","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","map","lightMap","aoMap","bumpMap","normalMap","normalMapObjectSpace","normalMapTangentSpace","displacementMap","emissiveMap","anisotropy","anisotropyMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","iridescenceMap","iridescenceThicknessMap","specularMap","specularColorMap","specularIntensityMap","roughnessMap","metalnessMap","alphaMap","alphaHash","transmission","transmissionMap","thicknessMap","sheenColorMap","sheenRoughnessMap","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","flatShading","vertexColors","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","numLightProbes","alphaToCoverage","matcap","clearcoat","dispersion","iridescence","alphaTest","sheen","gradientMap","decodeVideoTexture","NoToneMapping","dithering","opaque","useDepthPacking","depthPacking","unrollLoopPattern","GLSL3","fragmentGlsl","attachShader","index0AttributeName","bindAttribLocation","linkProgram","this.getUniforms","this.getAttributes","programReady","rendererExtensionParallelShaderCompile","isReady","this.isReady","COMPLETION_STATUS_KHR","destroy","this.destroy","deleteProgram","programIdCount","usedTimes","WebGLPrograms","clipping","getChannel","_activeChannels","add","_programLayers","Layers","_customShaders","WebGLShaderCache","Set","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","lights","shadows","environment","isMeshStandardMaterial","shaderID","customVertexShaderID","customFragmentShaderID","getVertexShaderID","getFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","isBatchedMesh","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","_colorsTexture","supportsVertexTextures","ObjectSpaceNormalMap","normalMapType","TangentSpaceNormalMap","transparent","NormalBlending","channel","tangent","isPoints","isFogExp2","directional","spot","spotLightMap","rectArea","hemi","directionalShadowMap","pointShadowMap","spotShadowMap","shadowMap","isVideoTexture","DoubleSide","clipCullDistance","multiDraw","customProgramCacheKey","getProgramCacheKey","morphAttributeCount","disableAll","enable","mask","UniformsUtils","acquireProgram","pl","preexistingProgram","releaseProgram","indexOf","pop","releaseShaderCache","WebGLProperties","key","painterSortStable","groupOrder","renderOrder","reversePainterSortStable","WebGLRenderList","getNextRenderItem","group","renderItem","renderItems","renderItemsIndex","transmissive","finish","sort","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","coneCos","penumbraCos","decay","skyColor","groundColor","halfWidth","halfHeight","ShadowUniformsCache","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","shadowCameraNear","shadowCameraFar","shadowCastingAndTexturingLightsFirst","lightA","lightB","castShadow","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","directionalShadowMatrix","spotShadow","spotLightMatrix","rectAreaLTC1","rectAreaLTC2","pointShadow","pointShadowMatrix","vector3","matrix4","Matrix4","matrix42","numSpotShadowsWithMaps","intensity","shadow","isAmbientLight","isLightProbe","addScaledVector","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","radius","mapSize","isSpotLight","setFromMatrixPosition","cos","angle","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","UniformsLib","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","nextVersion","setupView","sub","transformDirection","identity","premultiply","extractRotation","WebGLRenderState","lightsArray","shadowsArray","transmissionRenderTarget","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderStateArray","renderState","WebGLShadowMap","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","result","_distanceMaterial","_depthMaterial","displacementScale","keyA","uuid","keyB","materialsForVariant","_materialCache","cachedMaterial","onMaterialDispose","visible","shadowSide","displacementBias","wireframeLinewidth","linewidth","isMeshDistanceMaterial","renderObject","shadowCamera","test","isMesh","isLine","receiveShadow","frustumCulled","_frustum","intersectsObject","modelViewMatrix","multiplyMatrices","groups","k","kl","groupMaterial","depthMaterial","onBeforeShadow","renderBufferDirect","onAfterShadow","children","shadowMaterial","Frustum","_shadowMapSize","_viewportSize","_viewport","RGBADepthPacking","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","vertex","fragment","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","BufferGeometry","setAttribute","BufferAttribute","fullScreenMesh","autoUpdate","_previousType","this.render","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","multiply","floor","pars","minFilter","NearestFilter","magFilter","updateProjectionMatrix","setRenderTarget","viewportCount","getViewportCount","vp","getViewport","getFrustum","isPointLightShadow","blurSamples","mapPass","WebGLState","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","enabledCapabilities","disable","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","blendColor","blendAlpha","currentBlendingEnabled","BLEND","CustomBlending","currentBlending","currentPremultipledAlpha","AddEquation","currentBlendEquation","currentBlendEquationAlpha","FUNC_ADD","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","AdditiveBlending","blendFunc","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","MultiplyBlending","SRC_COLOR","SRC_ALPHA","currentBlendDstAlpha","currentBlendSrcAlpha","currentBlendDst","currentBlendSrc","currentBlendColor","currentBlendAlpha","blendEquationSeparate","equationToGL","factorToGL","equals","setFlipSided","currentFlipSided","frontFace","CW","CCW","setCullFace","cullFace","CullFaceNone","CULL_FACE","currentCullFace","CullFaceBack","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","colorBuffer","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","depthBuffer","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","depthFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LessEqualDepth","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","stencilBuffer","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","uboBindings","uboProgramMap","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentLineWidth","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","parseFloat","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","MinEquation","MIN","MaxEquation","MAX","ZeroFactor","OneFactor","SrcColorFactor","SrcAlphaFactor","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","DstColorFactor","DST_COLOR","DstAlphaFactor","DST_ALPHA","OneMinusSrcColorFactor","OneMinusSrcAlphaFactor","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","ConstantColorFactor","CONSTANT_COLOR","OneMinusConstantColorFactor","ONE_MINUS_CONSTANT_COLOR","ConstantAlphaFactor","CONSTANT_ALPHA","OneMinusConstantAlphaFactor","ONE_MINUS_CONSTANT_ALPHA","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","useProgram","setMaterial","frontFaceCW","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","SAMPLE_ALPHA_TO_COVERAGE","setLineWidth","lineWidth","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","compressedTexImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","texStorage2D","texStorage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","resizeImage","needsNewCanvas","maxSize","scale","getDimensions","VideoFrame","_canvas","useOffscreenCanvas","OffscreenCanvas","drawImage","textureNeedsGenerateMipmaps","generateMipmaps","LinearFilter","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","internalFormat","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","transfer","LinearTransfer","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","UnsignedIntType","UnsignedInt248Type","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","UnsignedShortType","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","isFramebufferTexture","mipmaps","isCompressedTexture","textureProperties","__webglInit","source","webglTextures","_sources","__cacheKey","deleteTexture","keys","_videoTextures","onRenderTargetDispose","renderTargetProperties","depthTexture","isWebGLCubeRenderTarget","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","__webglTexture","slot","__version","complete","uploadTexture","setTextureParameters","LinearMipmapNearestFilter","NearestMipmapLinearFilter","LinearMipmapLinearFilter","TEXTURE_WRAP_S","wrappingToGL","wrapS","TEXTURE_WRAP_T","wrapT","TEXTURE_WRAP_R","wrapR","filterToGL","compareFunction","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","compareToGL","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","format","premultiplyAlpha","flipY","unpackAlignment","textureCacheKey","isDataArrayTexture","isCompressedArrayTexture","isData3DTexture","sourceProperties","texturePrimaries","NoColorSpace","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","useTexStorage","allocateMemory","dataReady","levels","isDepthTexture","DepthStencilFormat","isDataTexture","mipmap","layerUpdates","layerIndex","layerSize","clearLayerUpdates","ALPHA","texelSize","LUMINANCE","LUMINANCE_ALPHA","UNSIGNED_SHORT_5_6_5","generateMipmap","onUpdate","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","multisampledRTTExt","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","samples","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","__autoAllocateDepthBuffer","webglDepthTexture","DepthFormat","createRenderbuffer","__useRenderToTexture","_imageDimensions","naturalWidth","naturalHeight","displayWidth","displayHeight","supportsInvalidateFramebuffer","navigator","userAgent","err","textureUnits","RepeatWrapping","REPEAT","ClampToEdgeWrapping","CLAMP_TO_EDGE","MirroredRepeatWrapping","MIRRORED_REPEAT","NearestMipmapNearestFilter","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","NeverCompare","AlwaysCompare","LessCompare","LessEqualCompare","EqualCompare","GreaterEqualCompare","GreaterCompare","NotEqualCompare","invalidationArrayRead","invalidationArrayDraw","textureUnit","resetTextureUnits","isCompressed","cubeImage","mipmapImage","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","isWebGL3DRenderTarget","isWebGLArrayRenderTarget","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","resolveDepthBuffer","DEPTH_BUFFER_BIT","resolveStencilBuffer","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","WebGLUtils","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt5999Type","ByteType","ShortType","AlphaFormat","RGBFormat","LuminanceFormat","LuminanceAlphaFormat","DEPTH_COMPONENT","DEPTH_STENCIL","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGBA_INTEGER","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","WebGLMaterials","refreshTransformUniform","refreshUniformsCommon","opacity","diffuse","emissive","emissiveIntensity","mapTransform","alphaMapTransform","bumpMapTransform","bumpScale","normalMapTransform","normalScale","negate","displacementMapTransform","emissiveMapTransform","specularMapTransform","envMapRotation","_e1","_m1","reflectivity","ior","refractionRatio","lightMapIntensity","lightMapTransform","aoMapIntensity","aoMapTransform","refreshFogUniforms","fogColor","isFog","fogNear","fogFar","fogDensity","density","refreshMaterialUniforms","pixelRatio","isMeshBasicMaterial","isMeshLambertMaterial","isMeshToonMaterial","isMeshPhongMaterial","specular","shininess","metalness","metalnessMapTransform","roughness","roughnessMapTransform","envMapIntensity","isMeshPhysicalMaterial","sheenColor","sheenRoughness","sheenColorMapTransform","sheenRoughnessMapTransform","clearcoatRoughness","clearcoatMapTransform","clearcoatRoughnessMapTransform","clearcoatNormalMapTransform","clearcoatNormalScale","iridescenceIOR","iridescenceThicknessMinimum","iridescenceThicknessRange","iridescenceThicknessMaximum","iridescenceMapTransform","iridescenceThicknessMapTransform","transmissionSamplerMap","transmissionSamplerSize","transmissionMapTransform","thickness","thicknessMapTransform","attenuationDistance","attenuationColor","anisotropyVector","anisotropyRotation","sin","anisotropyMapTransform","specularIntensity","specularColor","specularColorMapTransform","specularIntensityMapTransform","isMeshMatcapMaterial","isMeshDepthMaterial","referencePosition","nearDistance","farDistance","isMeshNormalMaterial","isLineBasicMaterial","isLineDashedMaterial","dashSize","totalSize","gapSize","isPointsMaterial","isSpriteMaterial","rotation","isShadowMaterial","isShaderMaterial","uniformsNeedUpdate","WebGLUniformsGroups","prepareUniformsGroup","uniformArray","jl","values","getUniformSize","chunkOffsetUniform","chunkSize","boundary","__data","storage","__offset","chunkOffset","__size","__cache","onUniformsGroupsDispose","allocatedBindingPoints","splice","updateList","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","bindingPointIndex","UNIFORM_BUFFER","bindBufferBase","indexString","cachedObject","arrayOffset","transformVertex","vertexPosition","mvPosition","center","_alignedPosition","subVectors","addScalar","_rotatedPosition","_viewWorldMatrix","sortOpaque","sortTransparent","copyAttributeData","targetOffset","vertexCount","setComponent","getComponent","checkIntersection","thresholdSq","positionAttribute","_vStart","_vEnd","distanceSqToSegment","distSq","_intersectPointOnRay","_intersectPointOnSegment","faceIndex","testPoint","localThresholdSq","intersects","rayPointDistanceSq","_ray","distanceSqToPoint","intersectPoint","closestPointToPoint","distanceToRay","sqrt","CubicPoly","c0","c1","c2","c3","initCatmullRom","x0","x1","x2","x3","tension","t0","t1","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","CatmullRom","p3","QuadraticBezier","CubicBezier","linkedList","dim","clockwise","last","sum","insertNode","next","removeNode","filterPoints","again","steiner","area","prev","earcutLinked","ear","minX","minY","invSize","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","tail","ax","bx","cx","ay","by","cy","y0","y1","pointInTriangle","locallyInside","inside","px","py","splitPolygon","isEarHashed","minZ","maxZ","compareX","q1","q2","o1","sign","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","removeDupEndPts","addContour","vertices","contour","isUniqueEdge","edges","hash1","hash2","convertArray","forceClone","prototype","call","isTypedArray","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","order","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","getTrackTypeForValueTypeName","typeName","NumberKeyframeTrack","VectorKeyframeTrack","ColorKeyframeTrack","QuaternionKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack","now","performance","Date","ascSort","recursive","propagate","raycast","getBoneList","boneList","isBone","setPoint","pointMap","_vector","unproject","getAttribute","setXYZ","EventDispatcher","listener","_listeners","listeners","listenerArray","dispatchEvent","_seed","DEG2RAD","PI","RAD2DEG","MathUtils","mapLinear","a1","b1","inverseLerp","damp","lambda","dt","exp","pingpong","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","setScalar","scalar","setX","setY","addVectors","subScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","cross","lengthSq","manhattanLength","atan2","angleTo","denominator","theta","acos","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerpVectors","getX","getY","rotateAround","Symbol","iterator","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","h","invert","t11","t12","t13","det","detInv","transpose","transposeIntoArray","setUvTransform","tx","ty","sx","sy","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","TYPED_ARRAYS","Float64Array","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","primaries","toReference","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","_workingColorSpace","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","ImageData","putImageData","toDataURL","sRGBToLinear","imageData","getImageData","_sourceId","Source","isSource","toJSON","meta","isRootObject","images","output","url","_textureId","Texture","DEFAULT_IMAGE","DEFAULT_MAPPING","DEFAULT_ANISOTROPY","repeat","userData","JSON","parse","stringify","metadata","generator","wrap","transformUv","UVMapping","setZ","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","getZ","getW","RenderTarget","options","isRenderTarget","assign","setSize","isWebGLRenderTarget","addLayerUpdate","WebGLArrayRenderTarget","Data3DTexture","WebGL3DRenderTarget","Quaternion","_x","_y","_z","_w","slerpFlat","src0","srcOffset0","src1","srcOffset1","z0","w0","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","_order","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","r1","r2","_onChange","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","projectionMatrix","projectionMatrixInverse","crossVectors","az","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","dz","setFromSpherical","setFromSphericalCoords","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","setFromCenterAndSize","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$4","union","containsPoint","containsBox","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","_triangleNormal","distanceToPoint","getBoundingSphere","_points","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","at","lookAt","recast","directionDistance","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","extDet","s0","invDet","sqrDist","intersectSphere","tca","radius2","thc","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","invdirx","invdiry","invdirz","tmax","tymin","tymax","isNaN","tzmin","tzmax","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","n14","n24","n34","n41","n42","n43","n44","setFromMatrix3","makeBasis","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","y2","z2","wx","wy","wz","decompose","_m1$4","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","coordinateSystem","WebGLCoordinateSystem","WebGPUCoordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toggle","isEnabled","_object3DId","_v1$4","_q1","_m1$3","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","configurable","enumerable","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","animations","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","removeFromParent","attach","getObjectById","getObjectByProperty","getObjectByName","getObjectsByProperty","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","serialize","library","element","extractFromCache","materials","shapes","skeletons","nodes","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","colorsTexture","boundingSphere","shape","bindMode","bindMatrix","uuids","animation","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","v3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","lightness","saturation","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","NAMES","_materialId","Material","isMaterial","AlwaysStencilFunc","KeepStencilOp","forceSinglePass","_alphaTest","onBuild","onBeforeCompile","setValues","newValue","currentValue","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","_generateTables","DataUtils","_vector$9","_vector2$1","TypeError","isBufferAttribute","StaticDrawUsage","setUsage","addUpdateRange","copyAt","index1","index2","setXY","component","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Int32BufferAttribute","Float16BufferAttribute","Float32BufferAttribute","_id$2","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","isBufferGeometry","drawRange","getIndex","hasAttribute","addGroup","clearGroups","setDrawRange","computeBoundingSphere","morphAttributesPosition","computeTangents","handleTriangle","vA","vB","vC","uvA","uvAttribute","uvB","uvC","isFinite","sdir","tdir","tan1","tan2","handleVertex","normalAttribute","n2","tmp2","tangentAttribute","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_tempA","_morphA","updateMorphTargets","morphTargetDictionary","ml","String","morphPosition","morphInfluences","influence","_computeIntersections","rayLocalSpace","widthSegments","heightSegments","depthSegments","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","groupCount","vertexCounter","iy","ix","uvs","numberOfVertices","groupStart","fromJSON","merge","uniformsGroups","default_vertex","default_fragment","Camera","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","concat","currentActiveCubeFace","currentActiveMipmapLevel","currentXrEnabled","needsPMREMUpdate","CubeTexture","tEquirect","mesh","currentMinFilter","_vector1","_vector2","_normalMatrix","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","p4","p5","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsSprite","sprite","negRadius","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","background_vert","vertex$h","background_frag","fragment$h","backgroundCube_vert","vertex$g","backgroundCube_frag","fragment$g","cube_vert","vertex$f","cube_frag","fragment$f","depth_vert","vertex$e","depth_frag","fragment$e","distanceRGBA_vert","vertex$d","distanceRGBA_frag","fragment$d","equirect_vert","vertex$c","equirect_frag","fragment$c","linedashed_vert","vertex$b","linedashed_frag","fragment$b","meshbasic_vert","vertex$a","meshbasic_frag","fragment$a","meshlambert_vert","vertex$9","meshlambert_frag","fragment$9","meshmatcap_vert","vertex$8","meshmatcap_frag","fragment$8","meshnormal_vert","vertex$7","meshnormal_frag","fragment$7","meshphong_vert","vertex$6","meshphong_frag","fragment$6","meshphysical_vert","vertex$5","meshphysical_frag","fragment$5","meshtoon_vert","vertex$4","meshtoon_frag","fragment$4","points_vert","vertex$3","points_frag","fragment$3","shadow_vert","vertex$2","shadow_frag","fragment$2","sprite_vert","vertex$1","sprite_frag","fragment$1","specularmap","envmap","aomap","lightmap","bumpmap","normalmap","displacementmap","emissivemap","metalnessmap","roughnessmap","gradientmap","ambientLightColor","lightProbe","directionalLights","directionalLightShadows","spotLights","spotLightShadows","pointLights","pointLightShadows","hemisphereLights","rectAreaLights","ltc_1","ltc_2","basic","lambert","phong","standard","toon","dashed","cube","tCube","tFlip","equirect","distanceRGBA","physical","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","_renderer","_pingPongRenderTarget","_cubeSize","_lodMax","_lodPlanes","_sizeLods","_sigmas","_equirectMaterial","_cubemapMaterial","_blurMaterial","_compileMaterial","fromScene","sigma","_setSize","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","compileCubemapShader","compileEquirectangularShader","_dispose","cubeSize","outputTarget","_textureToCubeUV","lodPlanes","sizeLods","sigmas","lod","totalLods","LOD_MIN","sizeLod","cubeFaces","coordinates","fill","positionSize","uvSize","faceIndexSize","weights","poleAxis","shaderMaterial","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","STANDARD_DEVIATIONS","weight","outputSize","DepthTexture","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","path","pathLength","lastIndex","matchEnd","subscript","container","uniformObject","setOptional","upload","seqWithValue","Map","_id$1","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","stage","WebGLShaderStage","BasicDepthPacking","ArrayCamera","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_hand","_grip","_targetRay","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","handedness","gripSpace","getPose","targetRaySpace","jointName","WebXRDepthSensing","depthFar","depthNear","depthData","texProps","getMesh","cameraXR","_occlusion_vertex","_occlusion_fragment","depthColor","depthWidth","depthHeight","WebXRManager","onSessionEvent","controllerIndex","controllerInputSources","controller","controllers","customReferenceSpace","onSessionEnd","onInputSourcesChange","_currentDepthFar","_currentDepthNear","depthSensing","initialRenderTarget","newRenderTarget","glBinding","glProjLayer","glBaseLayer","isPresenting","setPixelRatio","currentPixelRatio","currentSize","removed","added","updateCamera","framebufferScaleFactor","referenceSpaceType","foveation","pose","xrFrame","getContextAttributes","cameraL","cameraR","cameraAutoUpdate","getController","this.getController","getControllerGrip","this.getControllerGrip","getHand","this.getHand","setFramebufferScaleFactor","this.setFramebufferScaleFactor","setReferenceSpaceType","this.setReferenceSpaceType","getReferenceSpace","this.getReferenceSpace","setReferenceSpace","this.setReferenceSpace","space","getBaseLayer","this.getBaseLayer","getBinding","this.getBinding","getFrame","this.getFrame","getSession","this.getSession","setSession","this.setSession","xrCompatible","makeXRCompatible","getPixelRatio","XRWebGLLayer","layerInit","antialias","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","glDepthFormat","projectionlayerInit","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","this.getEnvironmentBlendMode","cameraLPos","cameraRPos","this.updateCamera","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","getCamera","this.getCamera","getFoveation","this.getFoveation","this.setFoveation","fixedFoveation","hasDepthSensing","this.hasDepthSensing","getDepthSensingMesh","this.getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","this.setAnimationLoop","this.dispose","WebGLRenderer","initGLContext","_this","morphtargets","programCache","renderLists","_alpha","bufferRenderer","indexedBufferRenderer","onContextLost","preventDefault","_isContextLost","onContextRestore","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onContextCreationError","statusMessage","releaseMaterialProgramReferences","forEach","prepareMaterial","getProgram","onXRSessionStart","onXRSessionEnd","projectObject","isLOD","currentRenderState","isSprite","_vector3","_projScreenMatrix","currentRenderList","renderScene","opaqueObjects","transmissiveObjects","transparentObjects","_clippingEnabled","_currentViewport","renderObjects","renderTransmissionPass","overrideMaterial","activeViewport","_currentClearColor","_currentClearAlpha","_renderBackground","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","_emptyScene","lightsStateVersion","programCacheKey","environmentRotation","updateCommonMaterialProperties","needsLights","uniformsList","getUniformList","progUniforms","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","isWebGLRenderer","WebGLRenderingContext","uintClearColor","intClearColor","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_localClippingEnabled","contextAttributes","contextName","this.getContext","this.getContextAttributes","forceContextLoss","this.forceContextLoss","loseContext","forceContextRestore","this.forceContextRestore","restoreContext","this.getPixelRatio","this.setPixelRatio","this.getSize","this.setSize","updateStyle","setViewport","getDrawingBufferSize","this.getDrawingBufferSize","setDrawingBufferSize","this.setDrawingBufferSize","getCurrentViewport","this.getCurrentViewport","this.getViewport","this.setViewport","getScissor","this.getScissor","setScissor","this.setScissor","getScissorTest","this.getScissorTest","this.setScissorTest","boolean","setOpaqueSort","this.setOpaqueSort","method","setTransparentSort","this.setTransparentSort","this.getClearColor","this.setClearColor","this.getClearAlpha","this.setClearAlpha","this.clear","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","this.clearColor","this.clearDepth","this.clearStencil","this.renderBufferDirect","needsProgramChange","refreshLights","refreshMaterial","refreshProgram","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","environmentIntensity","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","_multiDrawInstances","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","this.compile","targetScene","material2","compileAsync","this.compileAsync","checkMaterialsReady","depthSensingMesh","camera2","this.getActiveCubeFace","this.getActiveMipmapLevel","this.getRenderTarget","this.setRenderTargetTextures","this.setRenderTargetFramebuffer","defaultFramebuffer","__useDefaultFramebuffer","this.setRenderTarget","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","framebufferTextureLayer","readRenderTargetPixels","this.readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","this.readRenderTargetPixelsAsync","glBuffer","PIXEL_PACK_BUFFER","STREAM_READ","flush","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","getBufferSubData","deleteSync","copyFramebufferToTexture","this.copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","this.copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","dstX","dstY","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","copyTextureToTexture3D","this.copyTextureToTexture3D","dstZ","glTarget","initRenderTarget","this.initRenderTarget","this.initTexture","resetState","this.resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","_v1$2","_v2$1","LOD","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","AttachedBindMode","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","DetachedBindMode","skinIndex","boneIndex","bones","boneInverses","Bone","DataTexture","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","dataIndex","raycastTimes","instanceId","setColorAt","setMorphAt","MultiDrawRenderList","pool","item","_matrix$1","_invMatrixWorld","_identityMatrix","_whiteColor","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","BatchedMesh","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","indexArray","idArray","ID_ATTR_NAME","_validateGeometry","batchGeometry","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","getInstanceCountAt","setInstanceCountAt","iv","setVisibleAt","getVisibleAt","batchId","multiDrawStarts","multiDrawCounts","culled","linejoin","linecap","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","threshold","localThreshold","_start","_end","LineSegments","LineLoop","_inverseMatrix","_sphere","_position$2","Points","VideoTexture","video","updateVideo","requestVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CompressedArrayTexture","addLayerUpdates","CompressedCubeTexture","isCompressedCubeTexture","CanvasTexture","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","getTangent","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CubicBezierCurve","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","generateTorso","slope","indexRow","ConeGeometry","PolyhedronGeometry","pushVertex","vertexBuffer","getVertexByIndex","correctUV","azimuth","uvBuffer","subdivide","cols","aj","bj","rows","applyRadius","generateUVs","centroid","azi","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","hasHoles","outerLen","outerNode","maxX","queue","leftmost","hx","hy","mx","my","tanMin","bridge","bridgeReverse","maxY","ShapeUtils","isClockWise","triangulateShape","faces","holeIndex","ExtrudeGeometry","addShape","scalePt2","pt","getBevelVec","inPt","inPrev","inNext","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_x","v_trans_y","v_trans_lensq","shrink_by","direction_eq","sidewalls","layeroffset","sl","steps","bevelSegments","slen1","vlen","slen2","addVertex","nextIndex","verticesArray","uvgen","generateSideWallUV","addUV","placeholder","f3","generateTopUV","vector2","uvArray","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","extrudePath","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","reverse","hl","ahole","flen","contourMovements","holesMovements","verticesMovements","oneHoleMovements","bs","vert","buildLidFaces","layer","buildSideFaces","geometryShapes","indexA","indexB","indexC","b_x","b_y","c_x","c_y","a_x","a_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","calculatePositionOnCurve","su","quOverP","cs","cu","P1","P2","B","T","N","TubeGeometry","generateSegment","P","frames","generateBufferData","WireframeGeometry","o","ol","Geometries","RawShaderMaterial","_transmission","_sheen","_iridescence","_dispersion","_clearcoat","_anisotropy","AnimationUtils","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","interpolant","endIndex","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","blendMode","AdditiveAnimationBlendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_offsetNext","_weightNext","_offsetPrev","_weightPrev","endingStart","ZeroCurvatureEnding","endingEnd","iPrev","iNext","tPrev","tNext","ZeroSlopeEnding","WrapAroundEnding","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","InterpolateDiscrete","factoryMethod","InterpolateLinear","InterpolateSmooth","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","QuaternionLinearInterpolant","AnimationClip","duration","NormalAnimationBlendMode","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","this.itemStart","itemEnd","this.itemEnd","itemError","this.itemError","resolveURL","this.resolveURL","setURLModifier","this.setURLModifier","addHandler","this.addHandler","regex","loader","removeHandler","this.removeHandler","getHandler","this.getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","ReadableStream","body","getReader","callbacks","reader","total","contentLength","lengthComputable","loaded","stream","readData","read","done","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parseFromString","parser","DOMParser","re","label","decoder","TextDecoder","decode","catch","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","MaterialLoader","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","getInterleavedBuffer","interleavedBufferMap","arrayBufferMap","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","loadImage","deserializeImage","imageArray","deserializedImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","handleError","bufferCopy","decodeAudioData","audioBuffer","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmax","xmin","Clock","autoStart","elapsedTime","oldTime","running","getElapsedTime","getDelta","newTime","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopEnd","loopStart","playbackRate","isPlaying","hasPlaybackControl","sourceType","_progress","_startedAt","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","setIdentity","mixFunction","_slerp","mixFunctionAdditive","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","referenceCount","useCount","cumulativeWeightAdditive","cumulativeWeight","accumulate","accuIndex","currentWeight","accumulateAdditive","weightAdditive","saveOriginalState","originalValueOffset","getValue","restoreOriginalState","targetIndex","workOffset","_reservedRe","RegExp","_directoryRe","_wordChar","_nodeRe","_wordCharOrDot","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","create","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_weightInterpolant","_timeScaleInterpolant","_byClipCacheIndex","_cacheIndex","LoopRepeat","_loopCount","_startTime","_effectiveWeight","_effectiveTimeScale","repetitions","paused","clampWhenFinished","zeroSlopeAtEnd","zeroSlopeAtStart","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","LoopPingPong","LoopOnce","_setEndings","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","colors","isSkeletonHelper","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_camera","CameraHelper","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","_box","BoxHelper","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","solid","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","WebGLMultipleRenderTargets","isWebGLMultipleRenderTargets","revision","REVISION","__THREE__","BasicShadowMap","CullFaceFrontBack","DecrementStencilOp","DecrementWrapStencilOp","DynamicCopyUsage","DynamicDrawUsage","DynamicReadUsage","EqualStencilFunc","GLSL1","GreaterEqualStencilFunc","GreaterStencilFunc","IncrementStencilOp","IncrementWrapStencilOp","InvertStencilOp","LessEqualStencilFunc","LessStencilFunc","LinearMipMapLinearFilter","LinearMipMapNearestFilter","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","NearestMipMapLinearFilter","NearestMipMapNearestFilter","NeverStencilFunc","NotEqualStencilFunc","ReplaceStencilOp","StaticCopyUsage","StaticReadUsage","StreamCopyUsage","StreamDrawUsage","StreamReadUsage","TOUCH","DOLLY_PAN","DOLLY_ROTATE","TriangleFanDrawMode","TriangleStripDrawMode","TrianglesDrawMode","ZeroStencilOp"]
}
