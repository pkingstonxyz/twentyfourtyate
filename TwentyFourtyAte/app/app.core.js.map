{"version":3,"sources":["app/core.cljs"],"mappings":"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","names":["app.core/init-board","cljs.core/vec","iter__5523__auto__","s__34363","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__34365","cljs.core/chunk-buffer","i__34364","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__34362","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","i","cljs.core.range","s__34367","b__34369","i__34368","iter__34366","s__34371","b__34373","i__34372","iter__34370","j","refx.alpha.reg_event_db","_","db","vec__34374","cljs.core.nth","vec__34377","tile-list","cljs.core/flatten","indexed-list","cljs.core.map_indexed","idx","itm","empty-slots","cljs.core.filter","cljs.core.not_EQ_","picked-idx","empty-tile","cljs.core/rand-nth","rowcoord","colcoord","cljs.core/quot","cljs.core/mod","newval","newkey","cljs.core/assoc-in","cljs.core.update_in","cljs.core/inc","refx.alpha.reg_event_fx","p__34380","p__34381","map__34382","cljs.core/--destructure-map","cljs.core.get","vec__34383","cofx","dir","moves","app.merge/generate-board-moves","js/console.log","cljs.core/clj->js","refx.alpha.reg_sub","p__34386","vec__34387","cljs.core.get_in","props__27040__auto__","clj-props__27041__auto__","uix.core/glue-args","vec__34390","map__34393","f__27042__auto__","js/goog.DEBUG","app.core/cube","f__26980__auto__","*current-component*-orig-val__34394","uix.core/*current-component*","*current-component*-temp-val__34395","cljs.core/map?","js/Error","js/window","js/window.uix","js/window.uix.dev","sig__26989__auto__","js/window.uix.dev.signature!","js/window.uix.dev.register!","api","refx.alpha/use-sub","spring","js/shadow.js.shim.module$$react_spring$native.useSpring","uix.compiler.aot/>el","uix.compiler.attributes/keyword->string","vec__34396","map__34399","app.core/swipe-detector","*current-component*-orig-val__34406","*current-component*-temp-val__34407","children","vec__34400","vec__34403","x","set-x!","uix.core/use-state","y","set-y!","uix.compiler.alpha/component-element","js/shadow.js.shim.module$react_native.View","e","event","new-x","new-y","dx","dy","adx","js/Math.abs","ady","xthresh","ythresh","refx.alpha/dispatch","app.core/tile","tileinfo","f__27038__auto__","app.core/board","*current-component*-orig-val__34409","*current-component*-temp-val__34410","board","p1__34408#","cljs.core.map","app.core/root","*current-component*-orig-val__34411","*current-component*-temp-val__34412","js/shadow.js.shim.module$$react_three$fiber$native.Canvas","js/shadow.js.shim.module$$react_three$drei.PerspectiveCamera","app.core/init","refx.alpha/dispatch-sync","js/shadow.js.shim.module$expo.registerRootComponent","cljs.core/chunk-first"],"sourcesContent":["(ns app.core\n  (:require [react-native :as rn]\n            [\"expo\" :as expo]\n            [uix.core :refer [$ defui] :as uix]\n            [\"@react-three/fiber/native\" :as r3f]\n            [\"@react-three/drei\" :as r3d]\n            [\"@react-spring/native\" :as rs]\n            [refx.alpha :as rfx]\n            [app.merge :as m]))\n\n(defn init-board []\n  (vec (for [i (range 4)] (vec (for [j (range 4)] {:val 0 :key (+ (* 4 i) j) :pos-x j :pos-y i})))))\n\n(rfx/reg-event-db\n  :initialize\n  (fn [_ _]\n    {:board (init-board)\n     :keynum 16}))\n\n(rfx/reg-event-db\n  :add-random-tile\n  (fn [db _]\n    (let [tile-list (flatten (:board db))\n          indexed-list (map-indexed (fn [idx itm] [idx itm]) tile-list)\n          empty-slots (filter (fn [idx itm]\n                                (not= (:val itm) 0)) indexed-list)\n          [picked-idx empty-tile] (rand-nth empty-slots)\n          [rowcoord colcoord] [(quot picked-idx 4) (mod picked-idx 4)]\n          newval (rand-nth [2 2 2 2 2 2 2 2 2 4])\n          newkey (:keynum db)]\n      (-> db\n          (assoc-in [:board rowcoord colcoord :val] newval)\n          (assoc-in [:board rowcoord colcoord :key] newkey)\n          (update-in [:keynum] inc)))))\n \n(rfx/reg-event-fx\n  :move\n  (fn [{:keys [db] :as cofx} [_ dir]]\n    (let [moves (m/generate-board-moves (:board db) dir)]\n      (js/console.log (clj->js (:board db)))\n      {:db db\n       :fx [[:dispatch [:add-random-tile]]]})))\n\n(rfx/reg-sub\n  :board\n  (fn [db _]\n    (:board db)))\n(rfx/reg-sub\n  :animation-controller\n  (fn [db [_ idx]]\n    (get-in db [:animation-controllers idx])))\n\n(defui cube [{:keys [idx]}]\n  (let [api (rfx/use-sub [:animation-controller idx])\n        spring (rs/useSpring #js {:ref api\n                                  :x 0})]\n    ($ :mesh {:position-x spring}\n      ($ :boxGeometry {:args #js [1 1 1]})\n      ($ :meshStandardMaterial {:color \"orange\"}))))\n\n\n(defui swipe-detector [{:keys [children]}]\n  (let [[x set-x!] (uix/use-state 0.0) \n        [y set-y!] (uix/use-state 0.0)]\n    ($ rn/View {:style {:width \"100%\"\n                        :height \"100%\"}\n                :on-touch-start (fn [^js e]\n                                  (let [event (.-nativeEvent e)\n                                        new-x (.-pageX event)\n                                        new-y (.-pageY event)]\n                                    (set-x! new-x)\n                                    (set-y! new-y)))\n                :on-touch-end (fn [^js e]\n                                (let [dx (- (.. e -nativeEvent -pageX) x)\n                                      dy (- (.. e -nativeEvent -pageY) y)\n                                      adx (js/Math.abs dx)\n                                      ady (js/Math.abs dy)\n                                      xthresh 50\n                                      ythresh 50]\n                                  #_(js/console.log \"dx: \" dx \", dy: \" dy)\n                                  (if (or (> adx xthresh) (> ady ythresh))\n                                    (if (> adx ady)\n                                        ;horizontal swipes\n                                        (if (pos? dx)\n                                           ;right\n                                           (rfx/dispatch [:move :right])\n                                           ;left\n                                           (rfx/dispatch [:move :left]))\n                                        ;vertical swipes\n                                        (if (pos? dy)\n                                          ;down\n                                          (rfx/dispatch [:move :down])\n                                          ;up\n                                          (rfx/dispatch [:move :up]))))))}\n       children)))\n\n(defn tile [tileinfo]\n  ($ :mesh {:key (:key tileinfo)\n            :position #js [(- (:pos-x tileinfo) 1)\n                           (- (:pos-y tileinfo) 1)\n                           0]}\n     ($ :boxGeometry)\n     ($ :meshStandardMaterial {:color \"orange\"})))\n\n(defui board []\n  (let [board (rfx/use-sub [:board])]\n    (->> board\n        flatten\n        (filter #(not (zero? (:val %))))\n        (map tile)))) \n\n(defui root []\n  ($ swipe-detector\n     ($ r3f/Canvas\n        ($ :ambientLight {:intensity 1.57})\n        ($ r3d/PerspectiveCamera {:makeDefault true \n                                  :rotation #js [0 0 0]\n                                  :position #js [0 0 15]})\n        #_($ :mesh\n             ($ :boxGeometry {:args #js [1 1 1]})\n             ($ :meshStandardMaterial {:color \"orange\"}))\n        ($ board))))\n\n(defn ^:export init []\n  (rfx/dispatch-sync [:initialize])\n  (expo/registerRootComponent root))\n"]}