function Model$$module$js$meshes(props) {
  /** @const */ 
  var $jscomp$destructuring$var0 = (0,shadow.js.shim.module$$react_three$drei.useGLTF)("https://github.com/pkingstonxyz/twentyfourtyate/raw/main/TwentyFourtyAte/assets/models/burgerparts.glb");
  /** @const */ 
  var nodes = $jscomp$destructuring$var0.nodes;
  /** @const */ 
  var materials = $jscomp$destructuring$var0.materials;
  /** @const */ 
  var color = {platecolor:14540287, mesh2color:15181898, num2color:7623717, mesh4color:4886528, num4color:13827965, mesh8color:10682257, num8color:3049243, mesh16color:6637857, num16color:0, mesh32color:16764672, num32color:12933120, mesh64color:15196312, num64color:9988999, mesh128color:15160394, num128color:15177360, mesh256color:10572093, num256color:4200997, mesh512color:12445542, num512color:1918991, mesh1024whitecolor:15194543, mesh1024yolkcolor:15197849, num1024color:8421376, mesh2048color:15181898, 
  num2048color:0,};
  return shadow.js.shim.module$react.createElement("group", Object.assign({}, props, {dispose:null}), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 0 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes.plate.geometry, scale:[0.595, 0.039, 0.595]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.platecolor})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 2 ? true : false, castShadow:true, receiveShadow:true, 
  geometry:nodes["2mesh"].geometry, scale:[0.5, 0.064, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh2color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 2 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["2num"].geometry, scale:[0.5, 0.064, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num2color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 
  4 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["4mesh"].geometry, scale:[0.5, 0.051, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh4color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 4 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["4num"].geometry, scale:[0.5, 0.051, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num4color})), shadow.js.shim.module$react.createElement("mesh", 
  {visible:props.val >= 8 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["8mesh"].geometry, scale:[0.5, 0.051, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh8color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 8 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["8num"].geometry, scale:[0.5, 0.051, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num8color})), 
  shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 16 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["16mesh"].geometry, scale:[0.473, 0.049, 0.473]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh16color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 16 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["16num"].geometry, scale:[0.473, 0.049, 0.473]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", 
  {color:color.num16color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 32 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["32mesh"].geometry, scale:[0.452, 0.046, 0.452]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh32color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 32 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["32num"].geometry, scale:[0.452, 0.046, 
  0.452]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num32color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 64 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["64mesh"].geometry, scale:[0.221, 0.023, 0.221]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh64color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 64 ? true : false, castShadow:true, 
  receiveShadow:true, geometry:nodes["64num"].geometry, scale:[0.221, 0.023, 0.221]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num64color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 128 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["128mesh"].geometry, scale:[0.419, 0.043, 0.419]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh128color})), shadow.js.shim.module$react.createElement("mesh", 
  {visible:props.val == 128 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["128num"].geometry, scale:[0.419, 0.043, 0.419]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num128color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 256 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["256mesh"].geometry, rotation:[0, -0.016, Math.PI], scale:[0.5, 0.051, 0.405]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", 
  {color:color.mesh256color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 256 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["256num"].geometry, rotation:[0, -0.016, Math.PI], scale:[0.5, 0.051, 0.405]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num256color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 512 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["512mesh"].geometry, 
  rotation:[0, 0, -0.071], scale:[0.5, 0.034, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh512color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 512 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["512num"].geometry, rotation:[0, 0, -0.071], scale:[0.5, 0.034, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num512color})), shadow.js.shim.module$react.createElement("mesh", 
  {visible:props.val >= 1024 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["1024meshwhite"].geometry, rotation:[-0.005, 0.003, -0.045], scale:[0.5, 0.051, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh1024whitecolor})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 1024 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["1024meshyolk"].geometry, rotation:[-0.005, 0.003, -0.045], scale:[0.5, 
  0.051, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh1024yolkcolor})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 1024 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["1024num"].geometry, rotation:[-0.005, 0.003, -0.045], scale:[0.5, 0.051, 0.5]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num1024color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val >= 
  2048 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["2048mesh"].geometry, scale:[0.548, 0.05, 0.548]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.mesh2048color})), shadow.js.shim.module$react.createElement("mesh", {visible:props.val == 2048 ? true : false, castShadow:true, receiveShadow:true, geometry:nodes["2048num"].geometry, scale:[0.548, 0.05, 0.548]}, shadow.js.shim.module$react.createElement("MeshStandardMaterial", {color:color.num2048color})));
}
/** @const */ 
var module$js$meshes = {};
/** @const */ 
module$js$meshes.Model = Model$$module$js$meshes;

$CLJS.module$js$meshes=module$js$meshes;
//# sourceMappingURL=module$js$meshes.js.map
